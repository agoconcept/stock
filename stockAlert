#!/usr/bin/python3

from alpha_vantage.timeseries import TimeSeries
from datetime import datetime, date, timedelta
from pytz import timezone
import subprocess
from time import sleep
import sys

THRESHOLD = 0.5     # In percentage

TIMEZONE = timezone('Europe/Madrid')


# Only execute between 8:00 and 18:00
now_utc = datetime.now(timezone('UTC'))
if now_utc.astimezone(TIMEZONE).hour not in range(9, 18) or \
    now_utc.astimezone(TIMEZONE).weekday() not in range(0, 5):
    exit(1)

# Configure Alpha Vantage library
with open('token.alpha_vantage', 'r') as myfile:
    TOKEN = myfile.read().replace('\n', '')

ts = TimeSeries(key=TOKEN, output_format='pandas', indexing_type='date')

for stock_index in sys.argv[1:]:
    # Read data from Alpha Vantage
    # NOTE! Retrying, because sometimes it fails
    retry = 0
    while retry < 5:
        try:
            stock = meta_data = None
            print("TRY #%d - Reading symbol '%s' from Alpha Vantage" % (retry, stock_index))
            stock, meta_data = ts.get_quote_endpoint(stock_index)
        except:
            print("FAIL #%d - Error reading from Alpha Vantage" % (retry))
            retry += 1
            sleep(3)
            continue
        break

    if retry == 5:
        msg = "Unable to read data for symbol '%s' from Alpha Vantage, aborting" % (stock_index)
        print(msg)
        subprocess.call("telegram-send --format markdown -- '%s'" % (msg), shell=True)
        continue

    # Check if change is over a threshold compared to previous day
    curr_val = float(stock['05. price']['Global Quote'])
    prev_val = float(stock['08. previous close']['Global Quote'])
    delta = curr_val - prev_val
    perc_var = 100.0 * delta / prev_val

    if abs(perc_var) >= THRESHOLD:

        # Send message
        message = "!!! (%s) C: %.4f (%+.4f / %+.4f%%)" % (stock_index, curr_val, delta, perc_var)
        subprocess.call("telegram-send -- '%s'" % (message), shell=True)

